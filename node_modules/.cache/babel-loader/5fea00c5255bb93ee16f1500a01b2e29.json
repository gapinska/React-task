{"ast":null,"code":"var _jsxFileName = \"/home/monika/Projects/React-task/React-task/src/components/Form/Form.js\";\nimport React from \"react\";\nimport styles from \"./Form.module.scss\";\nimport Input from \"../Input/Input\";\nimport Button from \"../Button/Button\";\nimport Title from \"../Title/Title\";\nimport Radio from \"./FormRadio\";\nconst types = {\n  twitter: \"twitter\",\n  article: \"article\",\n  note: \"note\"\n};\nconst descriptions = {\n  twitter: \"favorite Twitter account\",\n  article: \"Article\",\n  note: \"Note\"\n};\n\nclass Form extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeOption: types.twitter\n    };\n\n    this.handleRadioButtonChange = type => {\n      this.setState({\n        activeOption: type\n      });\n    };\n  }\n\n  render() {\n    const activeOption = this.state.activeOption;\n    return React.createElement(\"div\", {\n      className: styles.wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Add new \", descriptions[activeOption]), React.createElement(\"form\", {\n      autoComplete: \"off\",\n      className: styles.form,\n      onSubmit: this.props.submitFn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.formOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      id: types.twitter,\n      checked: activeOption === types.twitter,\n      changeFn: () => this.handleRadioButtonChange(types.twitter),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Twitter\"), React.createElement(Radio, {\n      id: types.article,\n      checked: activeOption === types.article,\n      changeFn: () => this.handleRadioButtonChange(types.article),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Article\"), React.createElement(Radio, {\n      id: types.note,\n      checked: activeOption === types.note,\n      changeFn: () => this.handleRadioButtonChange(types.note),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Note\")), React.createElement(Input, {\n      name: \"name\",\n      label: activeOption === types.twitter ? \"Twitter Name\" : \"Title\",\n      maxLength: 30,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), activeOption !== types.note ? React.createElement(Input, {\n      name: \"link\",\n      label: activeOption === types.twitter ? \"Twitter Link\" : \"Link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }) : null, activeOption === types.twitter ? React.createElement(Input, {\n      name: \"image\",\n      label: \"Image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }) : null, React.createElement(Input, {\n      tag: \"textarea\",\n      name: \"description\",\n      label: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"add new item\")));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/monika/Projects/React-task/React-task/src/components/Form/Form.js"],"names":["React","styles","Input","Button","Title","Radio","types","twitter","article","note","descriptions","Form","Component","state","activeOption","handleRadioButtonChange","type","setState","render","wrapper","form","props","submitFn","formOptions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE,SADG;AAEZC,EAAAA,OAAO,EAAE,SAFG;AAGZC,EAAAA,IAAI,EAAE;AAHM,CAAd;AAMA,MAAMC,YAAY,GAAG;AACnBH,EAAAA,OAAO,EAAE,0BADU;AAEnBC,EAAAA,OAAO,EAAE,SAFU;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;;AAMA,MAAME,IAAN,SAAmBX,KAAK,CAACY,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACNC,MAAAA,YAAY,EAAER,KAAK,CAACC;AADd,KADyB;;AAAA,SAKjCQ,uBALiC,GAKPC,IAAI,IAAI;AAChC,WAAKC,QAAL,CAAc;AACZH,QAAAA,YAAY,EAAEE;AADF,OAAd;AAGD,KATgC;AAAA;;AAWjCE,EAAAA,MAAM,GAAG;AAAA,UACCJ,YADD,GACkB,KAAKD,KADvB,CACCC,YADD;AAGP,WACE;AAAK,MAAA,SAAS,EAAEb,MAAM,CAACkB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgBT,YAAY,CAACI,YAAD,CAA5B,CADF,EAEE;AACE,MAAA,YAAY,EAAC,KADf;AAEE,MAAA,SAAS,EAAEb,MAAM,CAACmB,IAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAK,MAAA,SAAS,EAAErB,MAAM,CAACsB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,EAAE,EAAEjB,KAAK,CAACC,OADZ;AAEE,MAAA,OAAO,EAAEO,YAAY,KAAKR,KAAK,CAACC,OAFlC;AAGE,MAAA,QAAQ,EAAE,MAAM,KAAKQ,uBAAL,CAA6BT,KAAK,CAACC,OAAnC,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAQE,oBAAC,KAAD;AACE,MAAA,EAAE,EAAED,KAAK,CAACE,OADZ;AAEE,MAAA,OAAO,EAAEM,YAAY,KAAKR,KAAK,CAACE,OAFlC;AAGE,MAAA,QAAQ,EAAE,MAAM,KAAKO,uBAAL,CAA6BT,KAAK,CAACE,OAAnC,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,EAeE,oBAAC,KAAD;AACE,MAAA,EAAE,EAAEF,KAAK,CAACG,IADZ;AAEE,MAAA,OAAO,EAAEK,YAAY,KAAKR,KAAK,CAACG,IAFlC;AAGE,MAAA,QAAQ,EAAE,MAAM,KAAKM,uBAAL,CAA6BT,KAAK,CAACG,IAAnC,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,CALF,EA4BE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEK,YAAY,KAAKR,KAAK,CAACC,OAAvB,GAAiC,cAAjC,GAAkD,OAF3D;AAGE,MAAA,SAAS,EAAE,EAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,EAiCGO,YAAY,KAAKR,KAAK,CAACG,IAAvB,GACC,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEK,YAAY,KAAKR,KAAK,CAACC,OAAvB,GAAiC,cAAjC,GAAkD,MAF3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAKG,IAtCN,EAwCGO,YAAY,KAAKR,KAAK,CAACC,OAAvB,GACC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,KAAK,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAEG,IA1CN,EA2CE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,UAAX;AAAsB,MAAA,IAAI,EAAC,aAA3B;AAAyC,MAAA,KAAK,EAAC,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,EA4CE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA5CF,CAFF,CADF;AAmDD;;AAjEgC;;AAoEnC,eAAeI,IAAf","sourcesContent":["import React from \"react\";\nimport styles from \"./Form.module.scss\";\nimport Input from \"../Input/Input\";\nimport Button from \"../Button/Button\";\nimport Title from \"../Title/Title\";\nimport Radio from \"./FormRadio\";\n\nconst types = {\n  twitter: \"twitter\",\n  article: \"article\",\n  note: \"note\",\n};\n\nconst descriptions = {\n  twitter: \"favorite Twitter account\",\n  article: \"Article\",\n  note: \"Note\",\n};\n\nclass Form extends React.Component {\n  state = {\n    activeOption: types.twitter,\n  };\n\n  handleRadioButtonChange = type => {\n    this.setState({\n      activeOption: type,\n    });\n  };\n\n  render() {\n    const { activeOption } = this.state;\n\n    return (\n      <div className={styles.wrapper}>\n        <Title>Add new {descriptions[activeOption]}</Title>\n        <form\n          autoComplete=\"off\"\n          className={styles.form}\n          onSubmit={this.props.submitFn}\n        >\n          <div className={styles.formOptions}>\n            <Radio\n              id={types.twitter}\n              checked={activeOption === types.twitter}\n              changeFn={() => this.handleRadioButtonChange(types.twitter)}\n            >\n              Twitter\n            </Radio>\n            <Radio\n              id={types.article}\n              checked={activeOption === types.article}\n              changeFn={() => this.handleRadioButtonChange(types.article)}\n            >\n              Article\n            </Radio>\n            <Radio\n              id={types.note}\n              checked={activeOption === types.note}\n              changeFn={() => this.handleRadioButtonChange(types.note)}\n            >\n              Note\n            </Radio>\n          </div>\n          <Input\n            name=\"name\"\n            label={activeOption === types.twitter ? \"Twitter Name\" : \"Title\"}\n            maxLength={30}\n          />\n          {activeOption !== types.note ? (\n            <Input\n              name=\"link\"\n              label={activeOption === types.twitter ? \"Twitter Link\" : \"Link\"}\n            />\n          ) : null}\n\n          {activeOption === types.twitter ? (\n            <Input name=\"image\" label=\"Image\" />\n          ) : null}\n          <Input tag=\"textarea\" name=\"description\" label=\"Description\" />\n          <Button>add new item</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}